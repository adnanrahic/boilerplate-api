version: v1.0
name: First pipeline example
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Build test"
    task:
      env_vars:
        - name: TAG
          value: 0.1.$SEMAPHORE_BUILD_NUMBER
        - name: IMAGE
          value: adnanrahic/boilerplate-api
      jobs:
        - name: Docker build
          commands:
            - checkout
            - docker login -u $DOCKER_USER -p $DOCKER_PASS
            - docker pull $IMAGE:$BRANCH_NAME || true
            - docker build --cache-from $IMAGE:$BRANCH_NAME --tag $IMAGE:$BRANCH_NAME .
            - docker push $IMAGE:$BRANCH_NAME
      secrets:
        - name: docker-secrets

  - name: "Smoke tests"
    task:
      jobs:
      - name: Healthcheck
        commands:
          - checkout
          - docker-compose -f docker-compose.override.yml up --detach --build
          - curl localhost:3000/api

  - name: "Unit tests"
    task:
      jobs:
      - name: npm run test-unit
        commands:
          - checkout
          - docker-compose -f docker-compose.test-unit.yml up --build --exit-code-from api

      - name: Lint code
        commands:
          - checkout
          - npm run lint

      - name: Check security
        commands:
          - checkout
          - echo "make security"

  - name: "Integration tests"
    task:
      jobs:
      - name: npm run integration
        commands:
          - checkout
          - docker-compose -f docker-compose.test-integration.yml  up --build --exit-code-from api

  - name: "Push Image"
    task:
      env_vars:
        - name: TAG
          value: 0.1.$SEMAPHORE_BUILD_NUMBER
        - name: IMAGE
          value: adnanrahic/boilerplate-api
      jobs:
        - name: Push
          commands:
            - checkout
            - docker login -u $DOCKER_USER -p $DOCKER_PASS
            - docker pull $IMAGE:$BRANCH_NAME || true
            - docker build --cache-from $IMAGE:$BRANCH_NAME --tag $IMAGE:$TAG .
            - docker push $IMAGE:$TAG
      secrets:
        - name: docker-secrets

  - name: "Apply changes to K8S cluster"
    task:
      env_vars:
        - name: TAG
          value: 0.1.$SEMAPHORE_BUILD_NUMBER
        - name: IMAGE
          value: adnanrahic/boilerplate-api
      jobs:
        - name: Kubectl Apply
          commands:
            - checkout
            - docker pull $IMAGE:$TAG
            - echo "if $BRANCH_NAME !== 'master' break"
            - echo "Configure KOPS config to enable kubectl to talk to the KOPS cluster."
            - echo "'kubectl apply -f api-deployment.yml' - the image value will be '$IMAGE:$TAG' - no need to generate new file for every deploy"
      # secrets:
      #   - name: kops-secrets
      #   - name: ssh-secrets