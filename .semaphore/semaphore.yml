version: v1.0
name: First pipeline example
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Build test"
    task:
      jobs:
        - name: docker-compose build
          commands:
            - checkout
            - docker login -u $DOCKER_USER -p $DOCKER_PASS
            # - docker pull $IMAGE:$SEMAPHORE_GIT_BRANCH || true
            # - docker build --cache-from $IMAGE:$SEMAPHORE_GIT_BRANCH --tag $IMAGE:$SEMAPHORE_GIT_BRANCH .
            - docker-compose -f docker-compose.override.yml build
            - docker images
            - docker push $IMAGE:$SEMAPHORE_GIT_BRANCH
      secrets:
        - name: docker-secrets

  - name: "Smoke tests"
    task:
      jobs:
        - name: docker-compose up -d and CURL /api endpoint
          commands:
            - checkout
            # - docker pull $IMAGE:$SEMAPHORE_GIT_BRANCH
            # - docker build --cache-from $IMAGE:$SEMAPHORE_GIT_BRANCH --tag $IMAGE:$SEMAPHORE_GIT_BRANCH .
            # - docker run -d -p 27017:27017 mongo
            # - docker run -d -p 3000:3000 $IMAGE:$SEMAPHORE_GIT_BRANCH
            - ./generate-node-env.sh
            - docker-compose -f docker-compose.yml up -d
            - sleep 5
            - curl localhost:3000/api
      secrets:
        - name: prod-variables

  - name: "Unit tests"
    task:
      jobs:
        - name: npm run lint
          commands:
            - checkout
            - npm i
            - npm run lint
        - name: npm run test-unit
          commands:
            - checkout
            - ./generate-node-env.sh
            - docker-compose -f docker-compose.test-unit.yml up --build --exit-code-from api
      secrets:
        - name: test-variables

  - name: "Integration tests"
    task:
      jobs:
        - name: npm run integration
          commands:
            - checkout
            - ./generate-node-env.sh
            - docker-compose -f docker-compose.test-integration.yml  up --build --exit-code-from api
      secrets:
        - name: test-variables

  - name: "Push Image"
    task:
      jobs:
        - name: docker push  
          commands:
            - checkout
            - docker login -u $DOCKER_USER -p $DOCKER_PASS
            - docker pull $IMAGE:$SEMAPHORE_GIT_BRANCH
            - docker build --cache-from $IMAGE:$SEMAPHORE_GIT_BRANCH --tag $IMAGE:$SEMAPHORE_GIT_BRANCH .
            - docker push $IMAGE:SEMAPHORE_GIT_BRANCH # figure out a versioning system with build number
      secrets:
        - name: docker-secrets
        - name: prod-variables

  - name: "Apply changes to K8S cluster"
    task:
      jobs:
        - name: kubectl apply
          commands:
            - checkout
            - docker pull $IMAGE:$SEMAPHORE_GIT_BRANCH
            - docker images
            - echo "if $SEMAPHORE_GIT_BRANCH !== 'master' break"
            - echo "Configure KOPS config to enable kubectl to talk to the KOPS cluster."
            - echo "'kubectl apply -f api-deployment.yml' - the image value will be '$IMAGE:$SEMAPHORE_BUILD_NUMBER' - no need to generate new file for every deploy"
      # secrets:
      #   - name: kops-secrets
      #   - name: ssh-secrets